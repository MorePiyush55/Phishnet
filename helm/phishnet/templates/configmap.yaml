apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "phishnet.fullname" . }}-config
  labels:
    {{- include "phishnet.labels" . | nindent 4 }}
data:
  # Application Configuration
  APP_NAME: {{ .Values.app.name | quote }}
  APP_VERSION: {{ .Chart.AppVersion | quote }}
  APP_ENVIRONMENT: {{ .Values.app.environment | quote }}
  DEBUG: {{ .Values.app.debug | quote }}
  LOG_LEVEL: {{ .Values.app.logLevel | quote }}
  
  # Server Configuration
  HOST: "0.0.0.0"
  PORT: "8000"
  METRICS_PORT: "8001"
  WORKERS: {{ .Values.app.workers | quote }}
  
  # Database Configuration
  {{- if .Values.postgresql.enabled }}
  DATABASE_URL: "postgresql://{{ .Values.postgresql.auth.username }}:password@{{ include "phishnet.fullname" . }}-postgresql:5432/{{ .Values.postgresql.auth.database }}"
  {{- else }}
  DATABASE_URL: {{ .Values.externalDatabase.url | quote }}
  {{- end }}
  
  # Cache Configuration
  {{- if .Values.redis.enabled }}
  REDIS_URL: "redis://{{ include "phishnet.fullname" . }}-redis:6379/0"
  {{- else }}
  REDIS_URL: {{ .Values.externalRedis.url | quote }}
  {{- end }}
  
  # Security Configuration
  CORS_ORIGINS: {{ .Values.security.corsOrigins | toJson | quote }}
  ALLOWED_HOSTS: {{ .Values.security.allowedHosts | toJson | quote }}
  SECURE_COOKIES: {{ .Values.security.secureCookies | quote }}
  SESSION_TIMEOUT: {{ .Values.security.sessionTimeout | quote }}
  
  # Feature Flags
  ENABLE_RATE_LIMITING: {{ .Values.features.rateLimiting | quote }}
  ENABLE_CACHING: {{ .Values.features.caching | quote }}
  ENABLE_METRICS: {{ .Values.features.metrics | quote }}
  ENABLE_TRACING: {{ .Values.features.tracing | quote }}
  
  # Analysis Configuration
  MAX_CONCURRENT_ANALYSIS: {{ .Values.analysis.maxConcurrent | quote }}
  ANALYSIS_TIMEOUT: {{ .Values.analysis.timeout | quote }}
  ENABLE_ML_ANALYSIS: {{ .Values.analysis.enableML | quote }}
  ENABLE_REPUTATION_CHECK: {{ .Values.analysis.enableReputation | quote }}
  
  # Monitoring Configuration
  {{- if .Values.monitoring.enabled }}
  PROMETHEUS_MULTIPROC_DIR: "/tmp/prometheus_multiproc"
  METRICS_NAMESPACE: {{ .Values.monitoring.namespace | quote }}
  {{- end }}
  
  # Observability Configuration
  {{- if .Values.observability.tracing.enabled }}
  JAEGER_AGENT_HOST: {{ .Values.observability.tracing.jaegerAgentHost | quote }}
  JAEGER_AGENT_PORT: {{ .Values.observability.tracing.jaegerAgentPort | quote }}
  JAEGER_SERVICE_NAME: {{ include "phishnet.fullname" . | quote }}
  {{- end }}
  
  # Health Check Configuration
  HEALTH_CHECK_TIMEOUT: {{ .Values.healthCheck.timeout | quote }}
  HEALTH_CHECK_INTERVAL: {{ .Values.healthCheck.interval | quote }}

---
{{- if .Values.monitoring.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "phishnet.fullname" . }}-prometheus-config
  labels:
    {{- include "phishnet.labels" . | nindent 4 }}
    app.kubernetes.io/component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "alert.rules"
    
    scrape_configs:
      - job_name: 'phishnet-api'
        static_configs:
          - targets: ['{{ include "phishnet.fullname" . }}-api:8001']
        metrics_path: /metrics
        scrape_interval: 10s
        
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
  
  alert.rules: |
    groups:
      - name: phishnet.rules
        rules:
          - alert: PhishNetAPIDown
            expr: up{job="phishnet-api"} == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "PhishNet API is down"
              description: "PhishNet API has been down for more than 1 minute"
          
          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High error rate detected"
              description: "Error rate is {{ $value }} requests per second"
          
          - alert: HighResponseTime
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 1
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High response time detected"
              description: "95th percentile response time is {{ $value }} seconds"
{{- end }}
