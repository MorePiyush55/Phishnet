apiVersion: apps/v1
kind: Deployment
metadata:
  name: phishnet-api
  namespace: phishnet
  labels:
    app: phishnet-api
    component: api
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  # Zero-downtime deployments
  selector:
    matchLabels:
      app: phishnet-api
  template:
    metadata:
      labels:
        app: phishnet-api
        component: api
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: phishnet-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: phishnet-api
        image: phishnet/api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: redis-url
        - name: GOOGLE_GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: gemini-api-key
        - name: VIRUSTOTAL_API_KEY
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: virustotal-api-key
        - name: ABUSEIPDB_API_KEY
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: abuseipdb-api-key
        
        # Comprehensive Health Probes
        startupProbe:
          httpGet:
            path: /health/startup
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 12  # 60 seconds total startup time
          successThreshold: 1
        
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        
        # Resource Management
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        
        # Graceful Shutdown
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                echo "Initiating graceful shutdown..."
                # Send SIGTERM to the main process
                kill -TERM 1
                # Wait for graceful shutdown
                sleep 15
        
        terminationGracePeriodSeconds: 30
        
        # Volume Mounts
        volumeMounts:
        - name: app-config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        
        # Security Context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      
      # Init Container for Database Migrations
      initContainers:
      - name: migrate-db
        image: phishnet/api:latest
        command: ["python", "-m", "alembic", "upgrade", "head"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: database-url
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      
      # Volumes
      volumes:
      - name: app-config
        configMap:
          name: phishnet-config
      - name: logs
        emptyDir: {}
      
      # Pod Disruption Budget
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - phishnet-api
              topologyKey: kubernetes.io/hostname

