# Vault Configuration for PhishNet Secrets Management

# Vault Authentication and Authorization
path "phishnet/*" {
  capabilities = ["create", "read", "update", "delete", "list"]
}

path "phishnet/data/*" {
  capabilities = ["create", "read", "update", "delete"]
}

# Secret engines
path "secret/data/phishnet/*" {
  capabilities = ["create", "read", "update", "delete"]
}

# PKI for TLS certificates
path "pki/issue/phishnet" {
  capabilities = ["create", "update"]
}

# Database dynamic secrets
path "database/creds/phishnet-readonly" {
  capabilities = ["read"]
}

path "database/creds/phishnet-readwrite" {
  capabilities = ["read"]
}

# Transit encryption
path "transit/encrypt/phishnet" {
  capabilities = ["update"]
}

path "transit/decrypt/phishnet" {
  capabilities = ["update"]
}

---
# Vault Kubernetes Auth Role
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-k8s-auth-config
  namespace: phishnet
data:
  auth.hcl: |
    # Enable Kubernetes auth method
    auth "kubernetes" {
      type = "kubernetes"
      
      config {
        kubernetes_host = "https://kubernetes.default.svc.cluster.local"
        kubernetes_ca_cert = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        token_reviewer_jwt = file("/var/run/secrets/kubernetes.io/serviceaccount/token")
      }
    }
    
    # Define roles for PhishNet services
    role "phishnet-api" {
      bound_service_account_names = ["phishnet-api"]
      bound_service_account_namespaces = ["phishnet", "phishnet-staging"]
      policies = ["phishnet-api-policy"]
      ttl = "1h"
      max_ttl = "24h"
    }
    
    role "phishnet-worker" {
      bound_service_account_names = ["phishnet-worker"]
      bound_service_account_namespaces = ["phishnet", "phishnet-staging"]
      policies = ["phishnet-worker-policy"]
      ttl = "1h"
      max_ttl = "24h"
    }

---
# Vault Secret Policies
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-policies
  namespace: phishnet
data:
  phishnet-api-policy.hcl: |
    # API service policy
    path "secret/data/phishnet/app" {
      capabilities = ["read"]
    }
    
    path "secret/data/phishnet/gmail" {
      capabilities = ["read"]
    }
    
    path "secret/data/phishnet/external-apis" {
      capabilities = ["read"]
    }
    
    path "secret/data/phishnet/database" {
      capabilities = ["read"]
    }
    
    path "database/creds/phishnet-readwrite" {
      capabilities = ["read"]
    }
    
    path "transit/encrypt/phishnet" {
      capabilities = ["update"]
    }
    
    path "transit/decrypt/phishnet" {
      capabilities = ["update"]
    }

  phishnet-worker-policy.hcl: |
    # Worker service policy
    path "secret/data/phishnet/app" {
      capabilities = ["read"]
    }
    
    path "secret/data/phishnet/external-apis" {
      capabilities = ["read"]
    }
    
    path "secret/data/phishnet/database" {
      capabilities = ["read"]
    }
    
    path "database/creds/phishnet-readonly" {
      capabilities = ["read"]
    }
    
    path "transit/encrypt/phishnet" {
      capabilities = ["update"]
    }

---
# Vault Agent for Sidecar Pattern
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-agent-config
  namespace: phishnet
data:
  agent.hcl: |
    pid_file = "/home/vault/.pid"
    
    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "phishnet-api"
        }
      }
      
      sink "file" {
        config = {
          path = "/home/vault/.vault-token"
        }
      }
    }
    
    template {
      source = "/vault/config/app-secrets.tpl"
      destination = "/vault/secrets/app-secrets.env"
      error_on_missing_key = true
      perms = 0640
      backup = true
      wait {
        min = "2s"
        max = "10s"
      }
    }
    
    vault {
      address = "https://vault.vault-system.svc.cluster.local:8200"
      tls_skip_verify = false
      ca_cert = "/vault/tls/ca.crt"
    }

  app-secrets.tpl: |
    {{- with secret "secret/data/phishnet/app" }}
    SECRET_KEY="{{ .Data.data.secret_key }}"
    ENCRYPTION_KEY="{{ .Data.data.encryption_key }}"
    WEBHOOK_SECRET="{{ .Data.data.webhook_secret }}"
    {{- end }}
    
    {{- with secret "secret/data/phishnet/gmail" }}
    GMAIL_CLIENT_ID="{{ .Data.data.client_id }}"
    GMAIL_CLIENT_SECRET="{{ .Data.data.client_secret }}"
    {{- end }}
    
    {{- with secret "secret/data/phishnet/external-apis" }}
    VIRUSTOTAL_API_KEY="{{ .Data.data.virustotal_key }}"
    ABUSEIPDB_API_KEY="{{ .Data.data.abuseipdb_key }}"
    GEMINI_API_KEY="{{ .Data.data.gemini_key }}"
    {{- end }}
    
    {{- with secret "database/creds/phishnet-readwrite" }}
    DB_USERNAME="{{ .Data.username }}"
    DB_PASSWORD="{{ .Data.password }}"
    {{- end }}
