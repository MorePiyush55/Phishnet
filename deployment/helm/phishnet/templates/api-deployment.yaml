{{- if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "phishnet.fullname" . }}-api
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "phishnet.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.api.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "phishnet.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        {{- include "phishnet.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "phishnet.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: phishnet-api
        image: {{ include "phishnet.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8001
          name: metrics
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: {{ .Values.environment | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.logLevel | quote }}
        - name: DATABASE_URL
          value: {{ include "phishnet.databaseUrl" . | quote }}
        - name: REDIS_URL
          value: {{ include "phishnet.redisUrl" . | quote }}
        - name: BASE_URL
          value: {{ .Values.app.baseUrl | quote }}
        - name: GMAIL_REDIRECT_URI
          value: {{ .Values.app.gmail.redirectUri | quote }}
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "phishnet.fullname" . }}-secrets
              key: SECRET_KEY
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "phishnet.fullname" . }}-secrets
              key: ENCRYPTION_KEY
        - name: WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "phishnet.fullname" . }}-secrets
              key: WEBHOOK_SECRET
        - name: GMAIL_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "phishnet.fullname" . }}-secrets
              key: GMAIL_CLIENT_ID
        - name: GMAIL_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "phishnet.fullname" . }}-secrets
              key: GMAIL_CLIENT_SECRET
        - name: VIRUSTOTAL_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "phishnet.fullname" . }}-secrets
              key: VIRUSTOTAL_API_KEY
        - name: ABUSEIPDB_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "phishnet.fullname" . }}-secrets
              key: ABUSEIPDB_API_KEY
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "phishnet.fullname" . }}-secrets
              key: GEMINI_API_KEY
        {{- if .Values.postgresql.enabled }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "phishnet.fullname" . }}-postgresql
              key: postgres-password
        {{- end }}
        {{- if .Values.redis.enabled }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "phishnet.fullname" . }}-redis
              key: redis-password
        {{- end }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
        {{- with .Values.api.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.api.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        {{- with .Values.api.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      terminationGracePeriodSeconds: 60
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
