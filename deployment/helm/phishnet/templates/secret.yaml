apiVersion: v1
kind: Secret
metadata:
  name: {{ include "phishnet.fullname" . }}-secret
  labels:
    {{- include "phishnet.labels" . | nindent 4 }}
type: Opaque
data:
  # Database Credentials
  {{- if .Values.postgresql.enabled }}
  POSTGRES_PASSWORD: {{ .Values.postgresql.auth.password | b64enc }}
  {{- else }}
  DATABASE_PASSWORD: {{ .Values.externalDatabase.password | b64enc }}
  {{- end }}
  
  # Application Secrets
  SECRET_KEY: {{ .Values.app.secretKey | b64enc }}
  ENCRYPTION_KEY: {{ .Values.app.encryptionKey | b64enc }}
  WEBHOOK_SECRET: {{ .Values.app.webhookSecret | b64enc }}
  
  # JWT Configuration
  JWT_SECRET_KEY: {{ .Values.security.jwtSecretKey | b64enc }}
  
  # External API Keys
  VIRUSTOTAL_API_KEY: {{ .Values.app.externalApis.virustotal | b64enc }}
  ABUSEIPDB_API_KEY: {{ .Values.app.externalApis.abuseipdb | b64enc }}
  GEMINI_API_KEY: {{ .Values.app.externalApis.gemini | b64enc }}
  URLVOID_API_KEY: {{ .Values.app.externalApis.urlvoid | b64enc }}
  WHOISXML_API_KEY: {{ .Values.app.externalApis.whoisxml | b64enc }}
  
  # Gmail OAuth Configuration
  GMAIL_CLIENT_ID: {{ .Values.app.gmail.clientId | b64enc }}
  GMAIL_CLIENT_SECRET: {{ .Values.app.gmail.clientSecret | b64enc }}
  
  # Redis Authentication
  {{- if .Values.redis.enabled }}
  REDIS_PASSWORD: {{ .Values.redis.auth.password | b64enc }}
  {{- else }}
  REDIS_PASSWORD: {{ .Values.externalRedis.password | b64enc }}
  {{- end }}
  
  # Monitoring Credentials
  {{- if .Values.monitoring.enabled }}
  MONITORING_USERNAME: {{ .Values.monitoring.auth.username | b64enc }}
  MONITORING_PASSWORD: {{ .Values.monitoring.auth.password | b64enc }}
  {{- end }}

---
{{- if and .Values.ingress.enabled .Values.monitoring.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "phishnet.fullname" . }}-monitoring-auth
  labels:
    {{- include "phishnet.labels" . | nindent 4 }}
    app.kubernetes.io/component: monitoring
type: Opaque
data:
  auth: {{ printf "%s:%s" .Values.monitoring.auth.username (.Values.monitoring.auth.password | htpasswd) | b64enc }}
{{- end }}

---
{{- if .Values.tls.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "phishnet.fullname" . }}-tls
  labels:
    {{- include "phishnet.labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .Values.tls.cert | b64enc }}
  tls.key: {{ .Values.tls.key | b64enc }}
{{- end }}

---
{{- if .Values.backup.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "phishnet.fullname" . }}-backup-secret
  labels:
    {{- include "phishnet.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup
type: Opaque
data:
  # S3/Cloud storage credentials for backups
  {{- if .Values.backup.s3.enabled }}
  AWS_ACCESS_KEY_ID: {{ .Values.backup.s3.accessKeyId | b64enc }}
  AWS_SECRET_ACCESS_KEY: {{ .Values.backup.s3.secretAccessKey | b64enc }}
  S3_BUCKET: {{ .Values.backup.s3.bucket | b64enc }}
  S3_REGION: {{ .Values.backup.s3.region | b64enc }}
  {{- end }}
  
  # Encryption key for backup data
  BACKUP_ENCRYPTION_KEY: {{ .Values.backup.encryptionKey | b64enc }}
  
  # Database backup credentials
  DB_BACKUP_PASSWORD: {{ .Values.backup.dbPassword | b64enc }}
{{- end }}
