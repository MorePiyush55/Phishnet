apiVersion: apps/v1
kind: Deployment
metadata:
  name: phishnet-api
  namespace: phishnet
  labels:
    app.kubernetes.io/name: phishnet
    app.kubernetes.io/component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: phishnet
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: phishnet
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: phishnet-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: phishnet-api
        image: phishnet/api:latest
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8001
          name: metrics
          protocol: TCP
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: phishnet-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: phishnet-config
              key: LOG_LEVEL
        - name: DATABASE_URL
          value: "postgresql+asyncpg://phishnet_user:$(POSTGRES_PASSWORD)@postgres:5432/phishnet"
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: SECRET_KEY
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: REDIS_PASSWORD
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: ENCRYPTION_KEY
        - name: WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: WEBHOOK_SECRET
        - name: GMAIL_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: GMAIL_CLIENT_ID
        - name: GMAIL_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: GMAIL_CLIENT_SECRET
        - name: VIRUSTOTAL_API_KEY
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: VIRUSTOTAL_API_KEY
        - name: ABUSEIPDB_API_KEY
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: ABUSEIPDB_API_KEY
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: phishnet-secrets
              key: GEMINI_API_KEY
        - name: BASE_URL
          valueFrom:
            configMapKeyRef:
              name: phishnet-config
              key: BASE_URL
        - name: GMAIL_REDIRECT_URI
          valueFrom:
            configMapKeyRef:
              name: phishnet-config
              key: GMAIL_REDIRECT_URI
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: phishnet-api
  namespace: phishnet
  labels:
    app.kubernetes.io/name: phishnet
    app.kubernetes.io/component: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8001"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    name: http
  - port: 8001
    targetPort: 8001
    name: metrics
  selector:
    app.kubernetes.io/name: phishnet
    app.kubernetes.io/component: api
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: phishnet-api
  namespace: phishnet
  labels:
    app.kubernetes.io/name: phishnet
    app.kubernetes.io/component: api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: phishnet-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
